<script type='text/javascript' src='{{asset("js/paging/jquery-1.4.2.js")}}'></script>
<script type='text/javascript' src='{{asset("js/paging/data_table/table_paging.js")}}'></script>

{#gritter#}
<script type="text/javascript" src="{{asset('js/gritter/js/jquery.gritter.js')}}"></script>
<link rel="stylesheet" type="text/css" href="{{asset('js/gritter/css/jquery.gritter.css')}}" />

{#fancybox#}
<script type="text/javascript" src="{{asset('js/fancybox/jquery.fancybox-1.3.4.pack.js')}}"></script>
<link rel="stylesheet" type="text/css" href="{{asset('css/jquery.fancybox-1.3.4.css')}}" media="screen" />

<script>
	var countValuePaging = {{entities|length}};

    //show message
    function showMessage(title, text){
        $.gritter.add({
            // (string | mandatory) the heading of the notification
            title: title,
            // (string | mandatory) the text inside the notification
            text: text
        });
    }

    $(document).ready(function() {

		//Click ปุ่ม Edit
		$(".linkEditBuildingSite").click(function() {
            reloadId('.innerPanel', this.href + '/edit');
            hideId(".createPanel");
            showId(".innerPanel");

            hideId("#createRecordCancel");
            showId("#createRecord");
            document.getElementById('createRecord').scrollIntoView();
			return false;
		});

		//Click ปุ่ม Delete
		$(".linkDelete").click(function() {
			if (!confirm('คุณต้องการลบข้อมูลใช่ หรือไม่')) {
				return false;
			}
			$.ajax({
				type : "POST",
				url : this.href + "/update",
				data : {
					checkdelete : 'deleted'
				},
				success : function(msg) {
					if (msg == 'finish') {
						//alert('การลบสร็จเรียบร้อย');
						$('#listBuildingSite').fadeOut('slow').load(window.location + "show").fadeIn("slow");
                        showMessage('ลบข้อมูลสำเร็จ', 'ลบข้อมูล Building Site แล้ว');
					} else {
						alert('การลบผิดพลาด');
					}
				}
			});
			return false;
		});

		//Click ปุ่ม  Edit Facility
		$(".createSite").click(function() {
            saveIdBuildingSite = null;
			locationRoomType = this.href;
			$('.innerPanel').fadeOut("slow").load(locationRoomType).fadeIn("slow");
			toggle(".createPanel", 'hide');
			$("#createRecordCancel").hide();
			$("#createRecord").show('slow');
			document.getElementById('createRecord').scrollIntoView();
			return false;
		});

		function toggle(id, toggle) {
			$(id).animate({
				left : '+=50',
				height : toggle
			}, 500, function() {
			});
		}

	});

    function showFancy(){
        $.fancybox({
            'href'          : "#showMap",
            'titleShow' 	: false,
            'transitionIn' 	: 'elastic',
            'transitionOut' : 'elastic',
            'scrolling'		: 'no',
            'height'		: 'auto',
            'width'         : 'auto',
            'onComplete'       : function(){
                resizeMap();
            }
        });
    }

	var checkDoubleClickEdit = true;
	function changeCheckClick() {
		checkDoubleClickEdit = true;
	}

    // ค่าปัจจุบันในการ sort
    var orderByOld = "{{ orderBy }}";
    var orderByTypeOld = "{{ orderByType }}";

    //ประกาศค่าเริ่มต้น
    var urlPost = "{{ path('building_site_show') }}";
</script>
<fieldset>
    <table>
        <thead>
            <th style="width: 100px !important;" ><a class="btnOrderBy" href="#" id="sort_id">id</a></th>
            <th style="width: 410px !important;" ><a class="btnOrderBy" href="#" id="sort_building_name">name</a></th>
            <th style="width: 70px !important;" >facility</th>
            <th style="width: 110px !important;" >roomtype</th>
            <th style="width: 100px !important;" >nearly</th>
            <th style="width: 100px !important;" >gallery</th>
            <th style="width: 50px !important;" >action</th>
        </thead>
        <tbody>
        {% for entity in entities %}
            <tr>
                <td>{{ entity.id }}</td>
                <td>{{ entity.building_name }}</td>

                <!-- facility -->
                <td><a href="{{ path('facility2site_show', { 'id': entity.id }) }}" class="createSite">Edit</a></td>

                <!-- room type -->
                <td><a href="{{ path('roomtype2site_show', { 'id': entity.id }) }}" class="createSite">Edit</a></td>

                <!-- nearly -->
                <td><a href="{{ path('nearly2site_show', { 'id': entity.id }) }}" class="createSite">Edit</a></td>

                <!-- upload gallery -->
                <td><a href="{{ path('image_show', { 'id': entity.id }) }}" class="createSite">Edit</a></td>

                <td width="100">
                    <a href="{{ entity.id }}" class="linkEditBuildingSite">Edit</a>
                    &nbsp;&nbsp;
                    <a href="{{ entity.id }}" class="linkDelete">Delete</a>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="7" align="center">No matching records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
</fieldset>
<div class="datagrid">
    <ul>
        <strong>showing {{ countList }} entities : Page </strong>
        {% for i in 1..paginator.numpages %}
        {% if paginator.range.0 > 2 and i == paginator.range.0 %}
        ...
        {% endif %}

        {%  if(i==1 or i==paginator.numpages or i in paginator.range) %}
        {% if i==paginator.currentpage %}
        {% if i == noPage %}
        <input class="disableBtn" type="button" value="{{i}}" id="Submit" name="submitPage" disabled="true"/>
        {% else %}
        <input class="inPage" type="button" value="{{i}}" id="Submit" name="submitPage"/>
        {% endif %}
        {% else %}
        {% if i == noPage %}
        <input class="disableBtn" type="button" value="{{i}}" id="Submit" name="submitPage" disabled="true"/>
        {% else %}
        <input class="inPage" type="button" value="{{i}}" id="Submit" name="submitPage"/>
        {% endif %}
        {% endif %}
        {% endif %}

        {% if paginator.range[paginator.midrange -1] < paginator.numpages -1 and i == paginator.range[paginator.midrange-1] %}
        ...
        {% endif %}
        {% endfor %}
        <div align="right" style="float:right;" ><strong>Search:</strong>
            <input id="tbxSearch" style="height: 25px;margin-bottom: 10px;" value="{{ textSearch }}" />&nbsp;&nbsp;
            <select name="record" style="width:150px;" class="record">
                <option value="10">10 Record </option>
                {% if limit == '50' %}
                <option selected="yes" value="50">50 Record</option>
                <option value="100">100 Record</option>
                <option value="500">500 Record</option>
                {% elseif limit == '100' %}
                <option value="50">50 Record</option>
                <option selected="yes" value="100">100 Record</option>
                <option value="500">500 Record</option>
                {% elseif limit == '500' %}
                <option value="50">50 Record</option>
                <option value="100">100 Record</option>
                <option selected="yes" value="500">500 Record</option>
                {% else %}
                <option value="50">50 Record</option>
                <option value="100">100 Record</option>
                <option value="500">500 Record</option>
                {% endif %}
            </select>
        </div>
    </ul>
</div>
<br />

<div class="clear"></div>
<link href="http://www.google.com/uds/css/gsearch.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script src="http://www.google.com/uds/api?file=uds.js&v=1.0&key=ABQIAAAAjU0EJWnWPMv7oQ-jjS7dYxQ82LsCgTSsdpNEnBsExtoeJv4cdBSUkiLH6ntmAr_5O4EfjDwOa0oZBQ" type="text/javascript"></script>

<script type="text/javascript">

    //Id ของ textbox
    var nameLat = "#ftr_adminbundle_building_sitetype_latitude";
    var nameLong = "#ftr_adminbundle_building_sitetype_longitude";

    var defaultLat =    13.752058;
    var defaultLong =    100.496012;

    var geocoder = new google.maps.Geocoder();

    function geocodePosition(pos) {
        geocoder.geocode({
            latLng: pos
        }, function(responses) {
            if (responses && responses.length > 0) {
                updateMarkerAddress(responses[0].formatted_address);
            } else {
                updateMarkerAddress('Cannot determine address at this location.');
            }
        });
    }

    function updateMarkerStatus(str) {
        document.getElementById('markerStatus').innerHTML = str;
    }

    function updateMarkerPosition(latLng) {
        document.getElementById('info').innerHTML = [
            latLng.lat(),
            latLng.lng()
        ].join(', ');
    }

    function updateMarkerAddress(str) {
        document.getElementById('address').innerHTML = str;
    }

    function initialize() {
        var latLng = new google.maps.LatLng(defaultLat, defaultLong);
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 12,
            center: latLng,
            mapTypeId: 'roadmap'//google.maps.MapTypeId.ROADMAP
        });
        var marker = new google.maps.Marker({
            position: latLng,
            title: 'Point A',
            map: map,
            draggable: true
        });

        // Update current position info.
        updateMarkerPosition(latLng);
        geocodePosition(latLng);

        // Add dragging event listeners.
        google.maps.event.addListener(marker, 'dragstart', function() {
            updateMarkerAddress('Dragging...');
        });

        google.maps.event.addListener(marker, 'drag', function() {
            updateMarkerStatus('Dragging...');
            updateMarkerPosition(marker.getPosition());

            //Set ผลลัพธ์จากจุดมาค
            var latLng = marker.getPosition();
            $(nameLat).val(latLng.lat());
            $(nameLong).val(latLng.lng());
        });

        google.maps.event.addListener(marker, 'dragend', function() {
            updateMarkerStatus('Drag ended');
            geocodePosition(marker.getPosition());
        });

        ///////////////////////////////
        // Create one InfoWindow to open when a marker is clicked.
        gInfoWindow = new google.maps.InfoWindow;
        google.maps.event.addListener(gInfoWindow, 'closeclick', function() {
            unselectMarkers();
        });

        // Initialize the local searcher
        gLocalSearch = new GlocalSearch();
        gLocalSearch.setSearchCompleteCallback(null, OnLocalSearch);

        gMap = map;
    }

    function resizeMap(){
        if ($(nameLat).val() != '' && $(nameLat).val() != "0" && $(nameLong).val() != '' && $(nameLong).val() != "0")  {
            defaultLat = $(nameLat).val();
            defaultLong = $(nameLong).val();
        }
        initialize();
        google.maps.event.trigger(map, "resize");
    }
    // Onload handler to fire off the app.
    google.maps.event.addDomListener(window, 'load', initialize);
</script>
<script type="text/javascript">
    //<![CDATA[

    // Our global state
    var gLocalSearch;
    var gMap;
    var gInfoWindow;
    var gSelectedResults = [];
    var gCurrentResults = [];
    var gSearchForm;

    // Create our "tiny" marker icon
    var gYellowIcon = new google.maps.MarkerImage(
            "http://labs.google.com/ridefinder/images/mm_20_yellow.png",
            new google.maps.Size(12, 20),
            new google.maps.Point(0, 0),
            new google.maps.Point(6, 20));
    var gRedIcon = new google.maps.MarkerImage(
            "http://labs.google.com/ridefinder/images/mm_20_red.png",
            new google.maps.Size(12, 20),
            new google.maps.Point(0, 0),
            new google.maps.Point(6, 20));
    var gSmallShadow = new google.maps.MarkerImage(
            "http://labs.google.com/ridefinder/images/mm_20_shadow.png",
            new google.maps.Size(22, 20),
            new google.maps.Point(0, 0),
            new google.maps.Point(6, 20));

    // Set up the map and the local searcher.
    //        function OnLoad() {
    //
    //            // Initialize the map with default UI.
    //            gMap = new google.maps.Map(document.getElementById("map"), {
    //                center: new google.maps.LatLng(37.4419, -122.1419),
    //                zoom: 13,
    //                mapTypeId: 'roadmap'
    //            });
    //            // Create one InfoWindow to open when a marker is clicked.
    //            gInfoWindow = new google.maps.InfoWindow;
    //            google.maps.event.addListener(gInfoWindow, 'closeclick', function() {
    //                unselectMarkers();
    //            });
    //
    //            // Initialize the local searcher
    //            gLocalSearch = new GlocalSearch();
    //            gLocalSearch.setSearchCompleteCallback(null, OnLocalSearch);
    //        }

    function unselectMarkers() {
        for (var i = 0; i < gCurrentResults.length; i++) {
            gCurrentResults[i].unselect();
        }
    }

    function doSearch() {
        var query = document.getElementById("queryInput").value;
        gLocalSearch.setCenterPoint(gMap.getCenter());
        gLocalSearch.execute(query);
    }

    // Called when Local Search results are returned, we clear the old
    // results and load the new ones.
    function OnLocalSearch() {
        if (!gLocalSearch.results) return;
        var searchWell = document.getElementById("searchWell");

        // Clear the map and the old search well
        searchWell.innerHTML = "";
        for (var i = 0; i < gCurrentResults.length; i++) {
            gCurrentResults[i].marker().setMap(null);
        }
        // Close the infowindow
        gInfoWindow.close();

        gCurrentResults = [];
        for (var i = 0; i < gLocalSearch.results.length; i++) {
            gCurrentResults.push(new LocalResult(gLocalSearch.results[i]));
        }

        var attribution = gLocalSearch.getAttribution();
        if (attribution) {
            document.getElementById("searchWell").appendChild(attribution);
        }

        // Move the map to the first result
        var first = gLocalSearch.results[0];
        gMap.setCenter(new google.maps.LatLng(parseFloat(first.lat),
                parseFloat(first.lng)));

    }

    // Cancel the form submission, executing an AJAX Search API search.
    function CaptureForm(searchForm) {
        gLocalSearch.execute(searchForm.input.value);
        return false;
    }



    // A class representing a single Local Search result returned by the
    // Google AJAX Search API.
    function LocalResult(result) {
        var me = this;
        me.result_ = result;
        me.resultNode_ = me.node();
        me.marker_ = me.marker();
        google.maps.event.addDomListener(me.resultNode_, 'mouseover', function() {
            // Highlight the marker and result icon when the result is
            // mouseovered.  Do not remove any other highlighting at this time.
            me.highlight(true);
        });
        google.maps.event.addDomListener(me.resultNode_, 'mouseout', function() {
            // Remove highlighting unless this marker is selected (the info
            // window is open).
            if (!me.selected_) me.highlight(false);
        });
        google.maps.event.addDomListener(me.resultNode_, 'click', function() {
            me.select();
        });
        document.getElementById("searchWell").appendChild(me.resultNode_);
    }

    LocalResult.prototype.node = function() {
        if (this.resultNode_) return this.resultNode_;
        return this.html();
    };

    // Returns the GMap marker for this result, creating it with the given
    // icon if it has not already been created.
    LocalResult.prototype.marker = function() {
        var me = this;
        if (me.marker_) return me.marker_;
        var marker = me.marker_ = new google.maps.Marker({
            position: new google.maps.LatLng(parseFloat(me.result_.lat),
                    parseFloat(me.result_.lng)),
            icon: gYellowIcon, shadow: gSmallShadow, map: gMap});
        google.maps.event.addListener(marker, "click", function() {
            me.select();
        });
        return marker;
    };

    // Unselect any selected markers and then highlight this result and
    // display the info window on it.
    LocalResult.prototype.select = function() {
        unselectMarkers();
        this.selected_ = true;
        this.highlight(true);
        gInfoWindow.setContent(this.html(true));
        gInfoWindow.open(gMap, this.marker());
    };

    LocalResult.prototype.isSelected = function() {
        return this.selected_;
    };

    // Remove any highlighting on this result.
    LocalResult.prototype.unselect = function() {
        this.selected_ = false;
        this.highlight(false);
    };

    // Returns the HTML we display for a result before it has been "saved"
    LocalResult.prototype.html = function() {
        var me = this;
        var container = document.createElement("div");
        container.className = "unselected";
        container.appendChild(me.result_.html.cloneNode(true));
        return container;
    }

    LocalResult.prototype.highlight = function(highlight) {
        this.marker().setOptions({icon: highlight ? gRedIcon : gYellowIcon});
        this.node().className = "unselected" + (highlight ? " red" : "");
    }

    //        GSearch.setOnLoadCallback(OnLoad);
    //]]>
</script>
<body>
<style>
    #map {
        width: 500px;
        height: 400px;
        float: left;
    }
    #infoPanel {
        /*float: left;*/
        /*margin-left: 10px;*/
    }
    #infoPanel div {
        margin-bottom: 5px;
    }
    #map {height: 350px; border: 1px solid rgb(151, 151, 151); position: relative; background-color: rgb(229, 227, 223); overflow: hidden;}
    #searchWell {float: left; max-width: 330px;  }
    #searchWell .unselected {
        padding-left: 28px;
        padding-top: 1px;
        margin-top: 5px;
        background-image: url("http://labs.google.com/ridefinder/images/mm_20_yellow.png");
        background-repeat: no-repeat;
        background-position: top left;
    }

    .unselected .gs-watermark { display: none; }

    .unselected .gs-directions {
        display: none;
    }

    .unselected .gs-directions-to-from {
        display: none;
    }

    .unselected .select {
        cursor: pointer;
        text-decoration: underline;
        color: #7777cc;
    }

    #searchWell .red {
        background-image: url("http://labs.google.com/ridefinder/images/mm_20_red.png");
    }
</style>
<div id="hideFancy" style="display: none;">
    <div style="width:auto;height:auto;overflow: auto;position:relative;">
        <div style="width: 900px; height: 500px;" id="showMap">
            <div style="margin-bottom: 5px;">
                <div>
                    <input type="text" id="queryInput" value="pizza" style="width: 250px;">
                    <input type="button" value="Find" onclick="doSearch()">
                </div>
            </div>

            <div id="map" style="position: relative; background-color: rgb(229, 227, 223); overflow: hidden; "></div>

           <div style="margin-left: 10px;">
                <div id="infoPanel">
                    <b>Marker status:</b>
                    <div id="markerStatus"><i>Click and drag the marker.</i></div>
                    <b>Current position:</b>
                    <div id="info"></div>
                    <b>Closest matching address:</b>
                    <div id="address"></div>
                </div>
                <div >
                    <div id="searchWell"></div>
                </div>
            </div>
        </div>
    </div>
</div>